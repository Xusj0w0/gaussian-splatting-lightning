max_steps: 60_000
data:
  batch_size: 2

  # path: datasets/MipNeRF360/bicycle
  # parser:
  #   class_path: myimpl.dataparsers.regularization_dataparser.Regularization
  #   init_args:
  #     split_mode: experiment
  #     eval_image_select_mode: step
  #     eval_step: 8
  #     down_sample_factor: 4
  #     down_sample_rounding_mode: ceil
  #     semantic_dir: extra/sam2_feature_dim32

  path: datasets/MegaNeRF/building
  parser:
    class_path: myimpl.dataparsers.regularization_dataparser.Regularization
    init_args:
      split_mode: experiment
      eval_image_select_mode: list
      eval_list: datasets/MegaNeRF/building/splits/val_images.txt
      down_sample_factor: 4
      semantic_dir: extra/sam2_feature_dim32

  train_max_num_images_to_cache: 64
  num_workers: 6
  async_caching: true
model:
  renderer_output_types:
  - rgb
  - acc_depth
  - feature
  gaussian:
    class_path: myimpl.models.hash_grid_assisted_gaussian.HashGridAssistedGaussian
    init_args:
      feature_dim: 32
      base_layer: 11
      max_level: 4
      start_level: 1

      feature_adapter:
        optimization:
          lr_init: 3e-3
          lr_final: 3e-5

      feature_fusion:
        optimization:
          lr_init: 3e-3
          lr_final: 3e-5

      hash_grid_feature:
        out_dim: 32
        num_levels: 10
        min_res: 16
        max_res: 8192
        log2_hashmap_size: 16
        features_per_level: 4
        use_mixed: false

      optimization:
        hash_feature_lr_init: 5e-3
        hash_feature_lr_final: 5e-5
        anchor_features_lr: 2.5e-3
        anchor_features_lr_scheduler:
          warmup_steps: 0
        means_lr_init: 0.0
        scales_lr: 5e-3
        rotations_lr_init: 1e-3
        offsets_lr_init: 3.2e-5
        offsets_lr_scheduler:
          init_args:
            lr_final: 3.2e-7
        opacity_mlp_lr_init: 4e-3
        opacity_mlp_lr_final: 4e-5
        cov_mlp_lr_init: 8e-3
        cov_mlp_lr_final: 8e-5
        color_mlp_lr_init: 8e-3
        color_mlp_lr_final: 8e-5
        feature_bank_mlp_lr_init: 1e-3
        feature_bank_mlp_lr_final: 1e-5
  renderer:
    class_path: myimpl.renderers.hash_grid_assisted_renderer.HashGridAssistedGaussianRenderer
  metric:
    class_path: myimpl.metrics.scaffold_metrics.ScaffoldMetrics
    init_args:
      normal_from_iter: 7_000
      lambda_feature:
        enabled: true
        init: 1.0
        final_factor: 1.0
      # feature_until_iter: 30_000
  density:
    class_path: myimpl.density_controllers.grid_density_controllers.GridGaussianDensityController
    init_args:
      densify_until_iter: 40_000
      densify_grad_threshold: 1.0e-4

save_iterations:
- 7_000
- 20_000
- 40_000
- 60_000